// Code generated by protoc-gen-go. DO NOT EDIT.
// source: fly_guide.proto

/*
Package flyguide is a generated protocol buffer package.

It is generated from these files:
	fly_guide.proto

It has these top-level messages:
	FlyId
	GetAllFly
	Fly
	FlyRange
*/
package flyguide

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type FlyId struct {
	NameOrigin  string `protobuf:"bytes,1,opt,name=name_origin,json=nameOrigin" json:"name_origin,omitempty"`
	NameDestiny string `protobuf:"bytes,2,opt,name=name_destiny,json=nameDestiny" json:"name_destiny,omitempty"`
}

func (m *FlyId) Reset()                    { *m = FlyId{} }
func (m *FlyId) String() string            { return proto.CompactTextString(m) }
func (*FlyId) ProtoMessage()               {}
func (*FlyId) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *FlyId) GetNameOrigin() string {
	if m != nil {
		return m.NameOrigin
	}
	return ""
}

func (m *FlyId) GetNameDestiny() string {
	if m != nil {
		return m.NameDestiny
	}
	return ""
}

type GetAllFly struct {
	Flies []*Fly `protobuf:"bytes,1,rep,name=flies" json:"flies,omitempty"`
}

func (m *GetAllFly) Reset()                    { *m = GetAllFly{} }
func (m *GetAllFly) String() string            { return proto.CompactTextString(m) }
func (*GetAllFly) ProtoMessage()               {}
func (*GetAllFly) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *GetAllFly) GetFlies() []*Fly {
	if m != nil {
		return m.Flies
	}
	return nil
}

type Fly struct {
	FlyId       *FlyId `protobuf:"bytes,1,opt,name=fly_id,json=flyId" json:"fly_id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	FlyNumber   int32  `protobuf:"varint,4,opt,name=fly_number,json=flyNumber" json:"fly_number,omitempty"`
}

func (m *Fly) Reset()                    { *m = Fly{} }
func (m *Fly) String() string            { return proto.CompactTextString(m) }
func (*Fly) ProtoMessage()               {}
func (*Fly) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Fly) GetFlyId() *FlyId {
	if m != nil {
		return m.FlyId
	}
	return nil
}

func (m *Fly) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Fly) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Fly) GetFlyNumber() int32 {
	if m != nil {
		return m.FlyNumber
	}
	return 0
}

type FlyRange struct {
	From *FlyId `protobuf:"bytes,1,opt,name=from" json:"from,omitempty"`
	To   *FlyId `protobuf:"bytes,2,opt,name=to" json:"to,omitempty"`
}

func (m *FlyRange) Reset()                    { *m = FlyRange{} }
func (m *FlyRange) String() string            { return proto.CompactTextString(m) }
func (*FlyRange) ProtoMessage()               {}
func (*FlyRange) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *FlyRange) GetFrom() *FlyId {
	if m != nil {
		return m.From
	}
	return nil
}

func (m *FlyRange) GetTo() *FlyId {
	if m != nil {
		return m.To
	}
	return nil
}

func init() {
	proto.RegisterType((*FlyId)(nil), "flyguide.FlyId")
	proto.RegisterType((*GetAllFly)(nil), "flyguide.GetAllFly")
	proto.RegisterType((*Fly)(nil), "flyguide.Fly")
	proto.RegisterType((*FlyRange)(nil), "flyguide.FlyRange")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for FlyGuide service

type FlyGuideClient interface {
	GetFly(ctx context.Context, in *FlyId, opts ...grpc.CallOption) (*GetAllFly, error)
}

type flyGuideClient struct {
	cc *grpc.ClientConn
}

func NewFlyGuideClient(cc *grpc.ClientConn) FlyGuideClient {
	return &flyGuideClient{cc}
}

func (c *flyGuideClient) GetFly(ctx context.Context, in *FlyId, opts ...grpc.CallOption) (*GetAllFly, error) {
	out := new(GetAllFly)
	err := grpc.Invoke(ctx, "/flyguide.FlyGuide/GetFly", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for FlyGuide service

type FlyGuideServer interface {
	GetFly(context.Context, *FlyId) (*GetAllFly, error)
}

func RegisterFlyGuideServer(s *grpc.Server, srv FlyGuideServer) {
	s.RegisterService(&_FlyGuide_serviceDesc, srv)
}

func _FlyGuide_GetFly_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FlyId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FlyGuideServer).GetFly(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/flyguide.FlyGuide/GetFly",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FlyGuideServer).GetFly(ctx, req.(*FlyId))
	}
	return interceptor(ctx, in, info, handler)
}

var _FlyGuide_serviceDesc = grpc.ServiceDesc{
	ServiceName: "flyguide.FlyGuide",
	HandlerType: (*FlyGuideServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetFly",
			Handler:    _FlyGuide_GetFly_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "fly_guide.proto",
}

func init() { proto.RegisterFile("fly_guide.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 315 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x91, 0x4f, 0x4b, 0xc3, 0x40,
	0x10, 0xc5, 0x4d, 0xff, 0xd1, 0x4e, 0x94, 0xc2, 0x7a, 0x09, 0x8a, 0x34, 0xa6, 0x20, 0x3d, 0x85,
	0x52, 0xaf, 0x5e, 0x2c, 0xd2, 0x52, 0x04, 0x2d, 0xf9, 0x02, 0xa5, 0x6d, 0x26, 0x61, 0x61, 0xb3,
	0x1b, 0x36, 0x5b, 0x70, 0xaf, 0x7e, 0x72, 0x99, 0xa9, 0xff, 0xd1, 0xdb, 0xec, 0x9b, 0xdf, 0xce,
	0x7b, 0xbb, 0x03, 0xc3, 0x42, 0xf9, 0x4d, 0x79, 0x90, 0x39, 0xa6, 0xb5, 0x35, 0xce, 0x88, 0x7e,
	0xa1, 0x3c, 0x9f, 0x93, 0x47, 0xe8, 0x2e, 0x94, 0x5f, 0xe5, 0x62, 0x04, 0xa1, 0xde, 0x56, 0xb8,
	0x31, 0x56, 0x96, 0x52, 0x47, 0x41, 0x1c, 0x4c, 0x06, 0x19, 0x90, 0xf4, 0xcc, 0x8a, 0xb8, 0x86,
	0x53, 0x06, 0x72, 0x6c, 0x9c, 0xd4, 0x3e, 0x6a, 0x31, 0xc1, 0x97, 0x1e, 0x8e, 0x52, 0x32, 0x85,
	0xc1, 0x12, 0xdd, 0xbd, 0x52, 0x0b, 0xe5, 0xc5, 0x18, 0xba, 0x85, 0x92, 0xd8, 0x44, 0x41, 0xdc,
	0x9e, 0x84, 0xb3, 0xb3, 0xf4, 0xc3, 0x33, 0x5d, 0x28, 0x9f, 0x1d, 0x7b, 0xc9, 0x6b, 0x00, 0x6d,
	0x82, 0x6f, 0xa0, 0x47, 0x19, 0x65, 0xce, 0xc6, 0xe1, 0x6c, 0xf8, 0x83, 0x5e, 0xe5, 0xc4, 0x53,
	0x4a, 0x01, 0x1d, 0x32, 0x7c, 0x37, 0xe7, 0x5a, 0xc4, 0x10, 0xe6, 0xd8, 0xec, 0xad, 0xac, 0x9d,
	0x34, 0x3a, 0x6a, 0x1f, 0x73, 0x7d, 0x93, 0xc4, 0x15, 0x00, 0x4d, 0xd7, 0x87, 0x6a, 0x87, 0x36,
	0xea, 0xc4, 0xc1, 0xa4, 0x9b, 0x0d, 0x0a, 0xe5, 0x9f, 0x58, 0x48, 0xd6, 0xd0, 0xa7, 0x48, 0x5b,
	0x5d, 0xa2, 0x18, 0x43, 0xa7, 0xb0, 0xa6, 0xfa, 0x2f, 0x06, 0x37, 0xc5, 0x08, 0x5a, 0xce, 0x70,
	0x86, 0x3f, 0x90, 0x96, 0x33, 0xb3, 0x3b, 0x9e, 0xb8, 0x24, 0x55, 0x4c, 0xa1, 0xb7, 0x44, 0x47,
	0x8f, 0xfc, 0x8d, 0x5e, 0x9c, 0x7f, 0x09, 0x9f, 0xff, 0x96, 0x9c, 0xcc, 0xa7, 0x70, 0x29, 0x4d,
	0x5a, 0xda, 0x7a, 0x9f, 0xe2, 0xcb, 0xb6, 0xaa, 0x15, 0x36, 0xa9, 0x35, 0x07, 0x87, 0x8c, 0xce,
	0x87, 0x19, 0xd5, 0x3c, 0x7c, 0x4d, 0xdb, 0x5c, 0x07, 0xbb, 0x1e, 0xaf, 0xf5, 0xf6, 0x2d, 0x00,
	0x00, 0xff, 0xff, 0x43, 0xb5, 0x5d, 0x8f, 0xe9, 0x01, 0x00, 0x00,
}
